Statement : 
Delete every N nodes
Send Feedback
You have been given a singly linked list of integers along with two integers, 'M,' and 'N.'
Traverse the linked list such that you retain the 'M' nodes, then delete the next 'N' nodes. Continue the same until the end of the linked list.
To put it in other words, in the given linked list, you need to delete N nodes after every M nodes.
No need to print the list, it has already been taken care. Only return the new head to the list.

Sample Input 1 :
LL = 1 2 3 4 5 6 7 8 
M = 2 N = 2
Sample Output 1 :
1 2 5 6

Sample Input 2 :
LL = 10 20 30 40 50 60 
M = 0 N = 1
LL = 1 2 3 4 5 6 7 8 -1
M = 2 N = 3
Sample Output 2 :
1 2 6 7

/**************************************************************** 
    Following is the class structure of the Node class:
        class Node        {
        public:
	        int data;
	        Node *next;
	        Node(int data)
	        {
		        this->data = data;
		        this->next = NULL;
	        }
        };

*****************************************************************/

Node *skipMdeleteN(Node *head, int M, int N){
	if(!head || M == 0) return NULL;
//finding total number of nodes to skip and delelet nodes.
	int operatedNodes = M+N;
	Node* prev = NULL;
	Node* temp = head;
	while(temp){
		for(int i=1; i<=operatedNodes && temp; i++){
//skipping nodes
			if(i<=M){
				prev = temp;
				temp = temp->next;
//deleting nodes.
			}else{
				Node* delN = temp;
				temp = temp->next;
				delete delN;
				prev->next = temp;
			}
		}
	}
	return head;
}
